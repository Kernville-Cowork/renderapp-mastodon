services:
  - type: web
    name: frontend
    env: docker
    plan: free
    # buildCommand: "./bin/render-build.sh"
    scaling:
      minInstances: 1
      maxInstances: 3
      targetCPUPercent: 85
    healthCheckPath: /health
    envVars:
      - fromGroup: rails
      - key: WEB_CONCURRENCY
        value: 2
      - key: DATABASE_URL
        fromDatabase:
          name: mastodon_db
          property: connectionString
      - key: REDIS_URL
        fromService:
          name: redis-private
          type: redis
          property: connectionString

  - type: worker
    name: sidekiq
    env: docker
    numInstances: 1
    dockerfilePath: ./Dockerfile.worker
    envVars:
      - fromGroup: rails
      - key: DATABASE_URL
        fromDatabase:
          name: mastodon_db
          property: connectionString
      - key: REDIS_URL
        fromService:
          name: redis-private
          type: redis
          property: connectionString

  - type: redis
    name: redis-private
    ipAllowList: []
    plan: free

databases:
  - name: mastodon_db
    databaseName: mastodon
    plan: free

envVarGroups:
  - name: rails
    envVars:
      - key: LOCAL_DOMAIN
        value: kernvillecowork.social
      - key: SINGLE_USER_MODE
        value: "false"
      - key: SECRET_KEY_BASE
        sync: false
      - key: OTP_SECRET
        sync: false
      - key: VAPID_PRIVATE_KEY
        sync: false
      - key: VAPID_PUBLIC_KEY
        sync: false
      - key: SMTP_SERVER
        value: smtp.sendgrid.net
      - key: SMTP_PORT
        value: 587
      - key: SMTP_LOGIN
        sync: false
      - key: SMTP_PASSWORD
        sync: false
      - key: SMTP_AUTH_METHOD
        value: plain
      - key: SMTP_OPENSSL_VERIFY_MODE
        value: peer
      - key: SMTP_FROM_ADDRESS
        value: 'Mastodon <notifications@kernvillecowork.social>'
