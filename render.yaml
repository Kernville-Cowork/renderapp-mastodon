services:
  - type: web
    name: frontend
    env: docker
    scaling:
      minInstances: 1
      maxInstances: 3
      targetCPUPercent: 85
    healthCheckPath: /health
    envVars:
      - fromGroup: rails
      - key: WEB_CONCURRENCY
        value: 2
      - key: DATABASE_URL
        fromDatabase:
          name: mastodon_db
          property: connectionString
      - key: REDIS_URL
        fromService:
          name: redis
          type: pserv
          property: connectionString

  - type: worker
    name: sidekiq
    env: docker
    numInstances: 1
    dockerfilePath: ./Dockerfile.worker
    envVars:
      - fromGroup: rails
      - key: DATABASE_URL
        fromDatabase:
          name: mastodon_db
          property: connectionString
      - key: REDIS_URL
        fromService:
          name: redis
          type: pserv
          property: connectionString

  - type: pserv
    name: redis
    env: docker
    repo: https://github.com/render-examples/redis.git
    disk:
      name: redis-data
      mountPath: /var/lib/redis

databases:
  - name: mastodon_db
    databaseName: mastodon

envVarGroups:
  - name: rails
    envVars:
      - key: OTP_SECRET
        generateValue: true
      - key: SECRET_KEY_BASE
        generateValue: true
      - key: VAPID_PUBLIC_KEY
        sync: false
      - key: VAPID_PRIVATE_KEY
        sync: false
